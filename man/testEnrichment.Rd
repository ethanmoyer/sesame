% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/kyCG.R
\name{testEnrichment}
\alias{testEnrichment}
\title{testEnrichment tests for the enrichment of set of probes (query set) in
a number of features (database sets).}
\usage{
testEnrichment(
  querySet,
  databaseSets = NA,
  universeSet = NA,
  platform = NA,
  estimate.type = "ES",
  p.value.adj = FALSE,
  n.fdr = NA,
  return.meta = FALSE,
  verbose = FALSE
)
}
\arguments{
\item{querySet}{Vector of probes of interest (e.g., significant probes)}

\item{databaseSets}{List of vectors corresponding to the database sets of
interest with associated meta data as an attribute to each element. Optional.
(Default: NA)}

\item{universeSet}{Vector of probes in the universe set containing all of
the probes to be considered in the test. If it is not provided, it will be
inferred from the provided platform. (Default: NA).}

\item{platform}{String corresponding to the type of platform to use. Either
MM285, EPIC, HM450, or HM27. If it is not provided, it will be inferred
from the query set probeIDs (Default: NA).}

\item{estimate.type}{String indicating the estimate to report. (Default:
"ES")}

\item{p.value.adj}{Logical value indicating whether to report the adjusted
p-value. (Default: FALSE).}

\item{n.fdr}{Integer corresponding to the number of comparisons made. 
Optional. (Default: NA).}

\item{return.meta}{Logical value indicating whether to return meta data 
columns for those database sets containing sparse meta data information.}

\item{verbose}{Logical value indicating whether to display intermediate
text output about the type of test. Optional. (Default: FALSE).}
}
\value{
One list containing features corresponding the test estimate,
p-value, and type of test.
}
\description{
testEnrichment tests for the enrichment of set of probes (query set) in
a number of features (database sets).
}
\examples{

library(SummarizedExperiment)
databaseSetNames = c('KYCG.MM285.seqContextN.20210630', 
'KYCG.MM285.designGroup.20210210')
databaseSets = do.call(c, lapply(databaseSetNames, sesameDataGet))
MM285.tissueSignature = sesameDataGet('MM285.tissueSignature')
df = rowData(MM285.tissueSignature)
querySet = df$Probe_ID[df$branch == "E-Brain"]
testEnrichment(querySet=querySet, databaseSets=databaseSets, verbose=FALSE)
sesameDataClearCache()

}
